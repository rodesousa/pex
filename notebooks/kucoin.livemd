# Kucoin

## Portfolio

```elixir
Pex.KucoinTrade.coins_list()
```

## Gets trades

```
Pex.Data.list_trades()
|> Enum.filter(&(&1.stop_loss != nil and &1.platform == "kucoin"))
|> Enum.map(fn order ->
  {:ok, %{price: price}} = Pex.KucoinTrade.get_price(order.symbol)
  current_price = String.to_float(price)
  percent = Pex.Stat.percent_order(order, current_price)

  %{
    id: order.id,
    coin: order.symbol,
    sl: order.stop_loss,
    tp: order.take_profit,
    percent: Float.ceil(percent, 2),
    bought: order.price
  }
end)
|> Enum.sort(&(&1.coin > &2.coin))
```

## Buy market

pair = COIN-COIN

<!-- livebook:{"livebook_object":"cell_input","name":"pair","type":"text","value":""} -->

<!-- livebook:{"livebook_object":"cell_input","name":"take_profit","type":"text","value":"9.17"} -->

<!-- livebook:{"livebook_object":"cell_input","name":"distance","type":"number","value":"15.0"} -->

```elixir
{take_profit, _} = IO.gets("take_profit") |> Float.parse()
{distance, _} = IO.gets("distance") |> Float.parse()
pair = IO.gets("pair") |> String.trim("\n")

Pex.KucoinTrade.trade_buy(pair, take_profit, distance)
```
